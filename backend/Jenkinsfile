pipeline {
    agent any
    tools {
        nodejs 'nodejs-23-6' 
    }
    environment {
        MONGO_URL = "${params.MONGO_URL}" 
        PORT = 5621
    }
    stages {
        // This stage can be avoided as we directly used Pipelinescript from SCM
        // stage('Git Checkout') {
        //     steps {
        //         git branch: 'pre-prod', url: 'https://github.com/iam-narasimhasai/GoalsApp'
        //     }
        // }

        stage('Installing Dependencies') {
            steps {
                sh '''
                    cd backend
                    npm install
                '''
            }
        } 

        stage('OWASP Dependency Check') {
            steps {
                dependencyCheck additionalArguments: '--scan backend/ --out backend/owasp-report --prettyPrint --format ALL', 
                                nvdCredentialsId: 'NVD-API-KEY', 
                                odcInstallation: 'OWASP-DepCheck-12'

                junit allowEmptyResults: true, keepProperties: true, stdioRetention: '', testResults: 'backend/owasp-report/dependency-check-junit.xml'
                // Uncomment this to publish results and fail the build for critical vulnerabilities
                // dependencyCheckPublisher failedTotalCritical: 1, pattern: 'backend/owasp-report/dependency-check-report.xml', stopBuild: true
                publishHTML([allowMissing: true, alwaysLinkToLastBuild: true, keepAll: true, reportDir: 'backend/owasp-report', reportFiles: 'dependency-check-jenkins.html', reportName: 'Dependency HTML Report', reportTitles: '', useWrapperFileDirectly: true])
            }
        }

        
        stage('Run Unit Testing') {
            steps {
                sh '''
                    cd backend
                    npm run test
                '''
            }
        }

        stage('Code Coverage') {
            steps {
                sh '''
                    cd backend
                    npm run coverage
                '''
            }
        }



    }
}
