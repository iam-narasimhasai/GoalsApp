name: backend Testing  

on:
  workflow_dispatch:
  push:
    branches:
      - pre-prod

env:   
  MONGO_URL: ${{secrets.MONGO_URL}}
  PORT: ${{vars.PORT}}

jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        nodejs_version: [18,19,20]
        os: [ubuntu-latest]
        
    runs-on: ${{matrix.os}}

    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js Version - ${{matrix.nodejs_version}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.nodejs_version}}
      
      - name: Cache NPM Dependencies
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json')}}

      - name: Install Dependencies
        run: npm install
      

      - name: Run Unit Test for backend app
        continue-on-error: true
        run: npm run test

        
      - name: Upload Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results on ${{matrix.os}} with node version ${{matrix.nodejs_version}}
          path: backend/test-results.xml
  
  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJs Version - 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Cache NPM Dependencies
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json')}}
   

      - name: Install Dependencies
        run: npm install

      - name: Check Code Coverage
        continue-on-error: true
        id: nodecoverage
        run: npm run coverage

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: backend/coverage
          retention-days: 5

  docker:
    name: containerization
    # needs: [unit-testing,code-coverage]
    runs-on: ubuntu-latest


    steps:

    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Dockerhub Login
      uses: docker/login-action@v3.3.0
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Docker Build
      uses: docker/build-push-action@v6.10.0
      with:
        context: backend/Dockerfile.prod
        push: false
        tags: ${{vars.DOCKERHUB_USERNAME}}/testbackend:${{ github.sha }}

    - name: Docker Image Test
      run: |
       docker images
       docker run --name backendapp -d   \
           -p $PORT:$PORT \
           -e MONGO_URL=$MONGO_URL \
           ${{vars.DOCKERHUB_USERNAME}}/testbackend:${{ github.sha }}

       export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' backendapp)
       echo $IP

       echo Testing Image URL using curl

       curl 127.0.0.1:$PORT/goals

       

    

    